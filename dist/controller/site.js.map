{"version":3,"sources":["../../src/controller/site.js"],"names":["config","db","api","post","req","res","newSite","sitetype","body","name","network","country","details","geometry","coordinates","lat","long","save","err","send","json","message","get","find","sites","findById","params","id","site","put","delete","status","remove","_id","note","contact","equipment","newNote","title","text","notes","push","newContact","telmobile","email","teloffice","position","contacts","newEquipment","company","contactname","contactpos","contacttelm","contacttelo","contactemail","equipments"],"mappings":"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","file":"site.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Site from '../model/site';\nimport Note from '../model/note';\nimport Contact from '../model/contact';\nimport Equipment from '../model/equipment';\nimport bodyParser from 'body-parser';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // CRUD - Create Read Update Delete\n  // '/v1/site/add' - Create\n  api.post('/add', authenticate, (req, res) => { //add word authenticate to lock down\n    let newSite = new Site();\n    newSite.sitetype = req.body.sitetype;\n    newSite.name = req.body.name;\n    newSite.network = req.body.network;\n    newSite.country = req.body.country;\n    newSite.details = req.body.details;\n    newSite.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n    newSite.geometry.coordinates.long = req.body.geometry.coordinates.long;\n\n    newSite.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Site saved successfully' });\n    });\n  });\n\n  // '/v1/site' - Read\n  api.get('/', (req, res) => {\n    Site.find({}, (err, sites) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(sites);\n    });\n  });\n\n  // '/v1/site/:id' - Read 1\n  api.get('/:id', (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(site);\n    });\n  });\n\n  // '/v1/site/:id' - Update\n  api.put('/:id', authenticate, (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.send(err);\n      }\n      site.sitetype = req.body.sitetype;\n      site.name = req.body.name;\n      site.network = req.body.network;\n      site.country = req.body.country;\n      site.details = req.body.details;\n      site.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n      site.geometry.coordinates.long = req.body.geometry.coordinates.long;\n\n      site.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: \"Site info updated\"});\n      });\n    });\n  });\n\n  // '/v1/site/:id' - Delete\n  api.delete('/:id', authenticate, (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.status(500).send(err);\n        return;\n      }\n      if (site === null) {\n        res.status(404).send(\"Site not found\");\n        return;\n      }\n      Site.remove({\n        _id: req.params.id\n      }, (err, site) => {\n        if (err) {\n          res.status(500).send(err);\n          return;\n        }\n        Note.remove({\n          site: req.params.id\n        }, (err, note) => {\n          if (err) {\n            res.status(500).send(err);\n            return;\n          }\n        });\n        Contact.remove({\n          site: req.params.id\n        }, (err, contact) => {\n          if (err) {\n            res.status(500).send(err);\n            return;\n          }\n        });\n        Equipment.remove({\n          site: req.params.id\n        }, (err, equipment) => {\n          if (err) {\n            res.status(500).send(err);\n            return;\n          }\n        });\n        res.json({ message: \"Site and Additional Info Successfully Removed!\"});\n      });\n    });\n  });\n\n  // add note for a specific site id\n  // '/v1/site/notes/add/:id'\n  api.post('/notes/add/:id', authenticate, (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.send(err);\n      }\n      let newNote = new Note();\n\n      newNote.title = req.body.title;\n      newNote.text = req.body.text;\n      newNote.site = site._id\n      newNote.save((err, note) => {\n        if (err) {\n          res.send(err);\n        }\n        site.notes.push(newNote);\n        site.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Site note saved!'});\n        });\n      });\n    });\n  });\n\n  // get notes for a specific site id\n  // '/v1/site/notes/:id'\n  api.get('/notes/:id', (req, res) => {\n    Note.find({site: req.params.id}, (err, notes) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(notes);\n    });\n  });\n\n  // add contact for a specific site id\n  // '/v1/site/contacts/add/:id'\n  api.post('/contacts/add/:id', authenticate, (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.send(err);\n      }\n      let newContact = new Contact();\n\n      newContact.name = req.body.name;\n      newContact.telmobile = req.body.telmobile;\n      newContact.email = req.body.email;\n      newContact.teloffice = req.body.teloffice;\n      newContact.position = req.body.position;\n      newContact.site = site._id\n      newContact.save((err, note) => {\n        if (err) {\n          res.send(err);\n        }\n        site.contacts.push(newContact);\n        site.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Site contact saved!'});\n        });\n      });\n    });\n  });\n\n  // get contacts for a specific site id\n  // '/v1/site/contacts/:id'\n  api.get('/contacts/:id', (req, res) => {\n    Contact.find({site: req.params.id}, (err, contacts) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(contacts);\n    });\n  });\n\n  // add equipment for a specific site id\n  // '/v1/site/equipments/add/:id'\n  api.post('/equipments/add/:id', authenticate, (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.send(err);\n      }\n      let newEquipment = new Equipment();\n\n      newEquipment.equipment = req.body.equipment;\n      newEquipment.company = req.body.company;\n      newEquipment.contactname = req.body.contactname;\n      newEquipment.contactpos = req.body.contactpos;\n      newEquipment.contacttelm = req.body.contacttelm;\n      newEquipment.contacttelo = req.body.contacttelo;\n      newEquipment.contactemail = req.body.contactemail;\n      newEquipment.text = req.body.text;\n      newEquipment.site = site._id\n      newEquipment.save((err, equipment) => {\n        if (err) {\n          res.send(err);\n        }\n        site.equipments.push(newEquipment);\n        site.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Site equipment saved!'});\n        });\n      });\n    });\n  });\n\n  // get equipments for a specific site id\n  // '/v1/site/equipments/:id'\n  api.get('/equipments/:id', (req, res) => {\n    Equipment.find({site: req.params.id}, (err, equipments) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(equipments);\n    });\n  });\n\n  // retrieve all sites of a specific type\n  // '/v1/site/sitetype/:sitetype'\n  api.get('/sitetype/:sitetype', (req, res) => {\n    Site.find({sitetype: req.params.sitetype}, (err, sites) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(sites);\n    });\n  });\n\n  return api;\n}\n"]}