{"version":3,"sources":["../../src/controller/site.js"],"names":["config","db","api","post","req","res","newSite","sitetype","body","name","network","country","details","geometry","coordinates","lat","long","save","err","send","json","message","get","find","sites","findById","params","id","site","put","delete","status","remove","_id","note","contact","equipment","newNote","title","text","date","notes","push","findByIdAndRemove","siteid","newContact","telmobile","email","teloffice","position","contacts","newEquipment","company","contactname","contactpos","contacttelm","contacttelo","contactemail","equipments"],"mappings":"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","file":"site.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Site from '../model/site';\nimport Note from '../model/note';\nimport Contact from '../model/contact';\nimport Equipment from '../model/equipment';\nimport bodyParser from 'body-parser';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // CRUD - Create Read Update Delete\n  // '/v1/site/add' - Create\n  api.post('/add', (req, res) => { //add word authenticate to lock down\n    let newSite = new Site();\n    newSite.sitetype = req.body.sitetype;\n    newSite.name = req.body.name;\n    newSite.network = req.body.network;\n    newSite.country = req.body.country;\n    newSite.details = req.body.details;\n    newSite.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n    newSite.geometry.coordinates.long = req.body.geometry.coordinates.long;\n\n    newSite.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Site saved successfully' });\n    });\n  });\n\n  // '/v1/site' - Read\n  api.get('/', (req, res) => {\n    Site.find({}, (err, sites) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(sites);\n    });\n  });\n\n  // '/v1/site/:id' - Read 1\n  api.get('/:id', (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(site);\n    });\n  });\n\n  // '/v1/site/:id' - Update\n  api.put('/:id', (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.send(err);\n      }\n      site.sitetype = req.body.sitetype;\n      site.name = req.body.name;\n      site.network = req.body.network;\n      site.country = req.body.country;\n      site.details = req.body.details;\n      site.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n      site.geometry.coordinates.long = req.body.geometry.coordinates.long;\n\n      site.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: \"Site info updated\"});\n      });\n    });\n  });\n\n  // '/v1/site/:id' - Delete\n  api.delete('/:id', (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.status(500).send(err);\n        return;\n      }\n      if (site === null) {\n        res.status(404).send(\"Site not found\");\n        return;\n      }\n      Site.remove({\n        _id: req.params.id\n      }, (err, site) => {\n        if (err) {\n          res.status(500).send(err);\n          return;\n        }\n        Note.remove({\n          site: req.params.id\n        }, (err, note) => {\n          if (err) {\n            res.status(500).send(err);\n            return;\n          }\n        });\n        Contact.remove({\n          site: req.params.id\n        }, (err, contact) => {\n          if (err) {\n            res.status(500).send(err);\n            return;\n          }\n        });\n        Equipment.remove({\n          site: req.params.id\n        }, (err, equipment) => {\n          if (err) {\n            res.status(500).send(err);\n            return;\n          }\n        });\n        res.json({ message: \"Site and Additional Info Successfully Removed!\"});\n      });\n    });\n  });\n\n  // add note for a specific site id\n  // '/v1/site/notes/add/:id'\n  api.post('/notes/add/:id', (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.send(err);\n      }\n      let newNote = new Note();\n\n      newNote.title = req.body.title;\n      newNote.text = req.body.text;\n      newNote.date = req.body.date;\n      newNote.site = site._id;\n      newNote.save((err, note) => {\n        if (err) {\n          res.send(err);\n        }\n        site.notes.push(newNote);\n        site.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Site note saved!'});\n        });\n      });\n    });\n  });\n\n  // get notes for a specific site id\n  // '/v1/site/notes/:id'\n  api.get('/notes/:id', (req, res) => {\n    Note.find({site: req.params.id}, (err, notes) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(notes);\n    });\n  });\n\n  // '/v1/site/notes/:id' - Update\n  api.put('/notes/:id', (req, res) => {\n    Note.findById(req.params.id, (err, note) => {\n      if (err) {\n        res.send(err);\n      }\n      note.title = req.body.title;\n      note.text = req.body.text;\n      note.date = req.body.date;\n\n      note.save((err, note) => {\n        if (err) {\n          res.send(err);\n        }\n          res.json({ message: 'Site note updated!'});\n      });\n    });\n  });\n\n  //Delete individual note by id\n  // 'v1/site/notes/:id' - Delete\n  api.delete('/notes/:id', (req, res) => {\n    Note.findByIdAndRemove(req.params.id, (err, note) => {\n        if (err) {\n            res.status(500).send(err);\n            return;\n        }\n        if (note === null) {\n            res.status(404).send(\"Note not found\");\n            return;\n        }\n        let siteid = note.site;\n        Site.findById(siteid, (err, site) => {\n          site.notes.remove(req.params.id);\n          //delnote.remove;\n        //  Site.update({_id: {$in: site.notes}},\n        //  {$pull: {note: note.siteid}});\n          // site.notes.remove({\n          //   _id: req.params.id\n          // }, (err, site) => {\n          //   if (err) {\n          //     res.status(500).send(err);\n          //     return;\n          //   }\n          // })\n          //site.save((err, site) => {\n          //   if (err) {\n          //     res.send(err);\n          //   }\n              res.json({ message: 'Site note removed!'});\n              //sites.reindex;\n            });\n          //});\n        });\n      });\n\n  // add contact for a specific site id\n  // '/v1/site/contacts/add/:id'\n  api.post('/contacts/add/:id', (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.send(err);\n      }\n      let newContact = new Contact();\n\n      newContact.name = req.body.name;\n      newContact.telmobile = req.body.telmobile;\n      newContact.email = req.body.email;\n      newContact.teloffice = req.body.teloffice;\n      newContact.position = req.body.position;\n      newContact.site = site._id\n      newContact.save((err, note) => {\n        if (err) {\n          res.send(err);\n        }\n        site.contacts.push(newContact);\n        site.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Site contact saved!'});\n        });\n      });\n    });\n  });\n\n  // get contacts for a specific site id\n  // '/v1/site/contacts/:id'\n  api.get('/contacts/:id', (req, res) => {\n    Contact.find({site: req.params.id}, (err, contacts) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(contacts);\n    });\n  });\n\n  // add equipment for a specific site id\n  // '/v1/site/equipments/add/:id'\n  api.post('/equipments/add/:id', (req, res) => {\n    Site.findById(req.params.id, (err, site) => {\n      if (err) {\n        res.send(err);\n      }\n      let newEquipment = new Equipment();\n\n      newEquipment.equipment = req.body.equipment;\n      newEquipment.company = req.body.company;\n      newEquipment.contactname = req.body.contactname;\n      newEquipment.contactpos = req.body.contactpos;\n      newEquipment.contacttelm = req.body.contacttelm;\n      newEquipment.contacttelo = req.body.contacttelo;\n      newEquipment.contactemail = req.body.contactemail;\n      newEquipment.text = req.body.text;\n      newEquipment.site = site._id\n      newEquipment.save((err, equipment) => {\n        if (err) {\n          res.send(err);\n        }\n        site.equipments.push(newEquipment);\n        site.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Site equipment saved!'});\n        });\n      });\n    });\n  });\n\n  // get equipments for a specific site id\n  // '/v1/site/equipments/:id'\n  api.get('/equipments/:id', (req, res) => {\n    Equipment.find({site: req.params.id}, (err, equipments) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(equipments);\n    });\n  });\n\n  // retrieve all sites of a specific type\n  // '/v1/site/sitetype/:sitetype'\n  api.get('/sitetype/:sitetype', (req, res) => {\n    Site.find({sitetype: req.params.sitetype}, (err, sites) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(sites);\n    });\n  });\n\n  return api;\n}\n"]}